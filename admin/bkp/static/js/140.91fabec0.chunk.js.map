{"version":3,"file":"static/js/140.91fabec0.chunk.js","mappings":"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","sources":["views/pages/settings/Faq.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CForm,\r\n  CFormTextarea,\r\n  CAccordion,\r\n  CAccordionItem,\r\n  CAccordionHeader,\r\n  CAccordionBody,\r\n  CDropdownToggle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdown,\r\n  CFormSelect,\r\n  CDropdownDivider,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// or\r\n\r\nconst Faq = () => {\r\n  const token =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n  //  const adminId =\r\n  //   typeof window !== \"undefined\" ? localStorage.getItem(\"admin_id\") : null;\r\n  // console.log(token,\"token\")\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [faqFor, setFaqFor] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [value, setValue] = useState(0);\r\n  const [faq, setFaq] = useState([]);\r\n  // console.log(adminId)\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"guidelines/3/3\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data, \"FAQS\");\r\n        res.data.status == 200 ?   setFaq(res.data.data):  setFaq([])\r\n        // setFaq(res.data.data);\r\n      });\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const faqObj = new FormData();\r\n    faqObj.append(\"title\", question);\r\n    faqObj.append(\"description\", answer);\r\n    faqObj.append(\"type\", \"3\");\r\n    faqObj.append(\"faq_for\", faqFor);\r\n    await axios\r\n      .post(\"addQuidelines\", faqObj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        // console.log(result.data)\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: result.data.message,\r\n          showConfirmButton: false,\r\n          timer: 4000,\r\n        });\r\n        window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n          showConfirmButton: false,\r\n          timer: 4000,\r\n        });\r\n      });\r\n  };\r\n\r\n  const editHandler = async (items) => {\r\n    setValue(items.id);\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    axios\r\n      .get(\"faqDetail/\" + items.id, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res, \"single Faq's\");\r\n        setQuestion(res.data.data.title);\r\n        setId(res.data.data.id);\r\n        setAnswer(res.data.data.description);\r\n        setFaqFor(res.data.data.faq_for);\r\n      });\r\n  };\r\n\r\n  const handleUpdateSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const faqObj = new FormData();\r\n    faqObj.append(\"title\", question);\r\n    faqObj.append(\"description\", answer);\r\n    faqObj.append(\"type\", \"3\");\r\n    faqObj.append(\"faq_for\", faqFor);\r\n    faqObj.append(\"id\", id);\r\n\r\n    await axios\r\n      .post(\"addQuidelines\", faqObj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n\r\n      .then((result) => {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: result.data.message,\r\n          showConfirmButton: false,\r\n          timer: 4000,\r\n        });\r\n        window.location.reload(false);\r\n        // useNavigate(\"/\")\r\n      })\r\n      .catch((error) => {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n          showConfirmButton: false,\r\n          timer: 4000,\r\n        });\r\n      });\r\n  };\r\n\r\n  const deleteHandler = (items) => {\r\n    console.log(items);\r\n    const faqObj = new FormData();\r\n    faqObj.append(\"id\", items.id);\r\n    axios\r\n      .post(\"faqdelete\", faqObj, {\r\n        headers: {\r\n          accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n\r\n      .then((result) => {\r\n        // console.log(result)\r\n        let newArr = faq.filter((item) => {\r\n          return items.id !== item.id;\r\n        });\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: result.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n        console.log(newArr);\r\n        setFaq(newArr);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid \">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2  p-0\">\r\n            <div className=\"sidebar-open\"></div>\r\n          </div>\r\n\r\n          <div className=\"col-md-12 pl-60\">\r\n            <div>\r\n              <Accordion defaultActiveKey=\"1\">\r\n                {value == 0 ? (\r\n                  <Accordion.Item eventKey=\"0\" >\r\n                    <Accordion.Header>\r\n                      {\" \"}\r\n                      <AddIcon className=\"text-purple\" /> &nbsp; ADD NEW FAQ'S\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <CCol xs={12}>\r\n                        <CCard className=\"mb-4\">\r\n                          <CCardHeader>\r\n                            <strong>Add FAQ</strong>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <CForm className=\"row g-3\" onSubmit={handleSubmit}>\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Question\r\n                                </CFormLabel>\r\n                                <CFormInput\r\n                                  id=\"inputAddress\"\r\n                                  type=\"text\"\r\n                                  // defaultValue={street == \"null\" ? \"\" :street}\r\n\r\n                                  onChange={(e) => setQuestion(e.target.value)}\r\n                                  placeholder=\"Please Enter Your Question ?\"\r\n                                />\r\n                              </CCol>\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Answer\r\n                                </CFormLabel>\r\n                                <CFormTextarea\r\n                                  id=\"inputAddress\"\r\n                                  name=\"task\"\r\n                                  required\r\n                                  onChange={(e) => setAnswer(e.target.value)}\r\n                                  placeholder=\"Answer\"\r\n                                ></CFormTextarea>\r\n                              </CCol>\r\n\r\n                              \r\n\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Faq's For\r\n                                </CFormLabel>\r\n                                <CFormSelect\r\n                                  aria-label=\"Default select example\"\r\n                                  onChange={(e) => setFaqFor(e.target.value)}\r\n                                >\r\n                                  <option>Select Type</option>\r\n                                  <option value=\"1\">User</option>\r\n                                  <option value=\"2\">Lawyer</option>\r\n                                  <option value=\"3\">\r\n                                    Both (user & Lawyer)\r\n                                  </option>\r\n                                </CFormSelect>\r\n                              </CCol>\r\n\r\n                              <CCol md={12} className=\"text-center \">\r\n                                <CButton\r\n                                  type=\"submit\"\r\n                                  className=\"bg-black text-white border-b mb-3 px-5 mt-5\"\r\n                                >\r\n                                  Submit\r\n                                </CButton>\r\n                              </CCol>\r\n                            </CForm>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      </CCol>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                ) : (\r\n                  <Accordion.Item eventKey=\"1\">\r\n                    <Accordion.Header>\r\n                      {\" \"}\r\n                      <AddIcon className=\"text-purple\" /> &nbsp;Edit FAQ'S\r\n                    </Accordion.Header>\r\n                    <Accordion.Body>\r\n                      <CCol xs={12}>\r\n                        <CCard className=\"mb-4\">\r\n                          <CCardHeader>\r\n                            <strong>Edit FAQ</strong>\r\n                          </CCardHeader>\r\n                          <CCardBody>\r\n                            <CForm\r\n                              className=\"row g-3\"\r\n                              onSubmit={handleUpdateSubmit}\r\n                            >\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Question\r\n                                </CFormLabel>\r\n                                <CFormInput\r\n                                  id=\"inputAddress\"\r\n                                  type=\"text\"\r\n                                  defaultValue={question}\r\n                                  onChange={(e) => setQuestion(e.target.value)}\r\n                                  placeholder=\"Please Enter Your Question ?\"\r\n                                />\r\n                              </CCol>\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Answer\r\n                                </CFormLabel>\r\n                                <CFormTextarea\r\n                                  id=\"inputAddress\"\r\n                                  name=\"answer\"\r\n                                  defaultValue={answer}\r\n                                  onChange={(e) => setAnswer(e.target.value)}\r\n                                  placeholder=\"Answer\"\r\n                                ></CFormTextarea>\r\n                              </CCol>\r\n\r\n                              <CCol md={12}>\r\n                                <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                                  Faq's For\r\n                                </CFormLabel>\r\n                                <CFormSelect\r\n                                  aria-label=\"Default select example\"\r\n                                  onChange={(e) => setFaqFor(e.target.value)}\r\n                                >\r\n                                  <option>Select City</option>\r\n                                  <option selected={faqFor == \"1\"} value=\"1\">\r\n                                    User\r\n                                  </option>\r\n                                  <option selected={faqFor == \"2\"} value=\"2\">\r\n                                    Lawyer\r\n                                  </option>\r\n                                  <option selected={faqFor == \"0\"} value=\"0\">\r\n                                    Both (user & Lawyer)\r\n                                  </option>\r\n                                </CFormSelect>\r\n                              </CCol>\r\n\r\n                              <CCol md={12} className=\"text-center \">\r\n                                <CButton\r\n                                  type=\"submit\"\r\n                                  className=\"bg-black text-white border-b mb-3 px-5 mt-5\"\r\n                                >\r\n                                  Update\r\n                                </CButton>\r\n                              </CCol>\r\n                            </CForm>\r\n                          </CCardBody>\r\n                        </CCard>\r\n                      </CCol>\r\n                    </Accordion.Body>\r\n                  </Accordion.Item>\r\n                )}\r\n              </Accordion>\r\n              <div className=\"my-3 text-purple text-center f-18 fw-600\">\r\n                ALL FAQ's\r\n              </div>\r\n              <div className=\"mb-5\">\r\n                <Accordion defaultActiveKey=\"0\">\r\n                  {faq.map((items, index) => {\r\n                    return (\r\n                      <Accordion.Item key={index} eventKey={index}>\r\n                        <Accordion.Header>\r\n                          {\" \"}\r\n                          <span\r\n                            className=\"text-red \"\r\n                            style={{ fontWeight: \"600\" }}\r\n                          >\r\n                            Q-{index + 1}\r\n                          </span>{\" \"}\r\n                          &nbsp;<span className=\"fw-600 \">{items.title}</span>\r\n                        </Accordion.Header>\r\n                        <Accordion.Body>\r\n                          <span className=\"text-purple\">Answer :</span> &nbsp;{\" \"}\r\n                          {items.description}\r\n                          <div className=\"text-end mt-2\">\r\n                            <Link\r\n                              // to={`/edit-varriation/${row.id}`}\r\n                              style={{ width: \"50px\" }}\r\n                            >\r\n                              <button\r\n                                className=\"border-b bg-black m-1\"\r\n                                onClick={() => editHandler(items)}\r\n                              >\r\n                                <EditIcon className=\"text-white\" />\r\n                              </button>\r\n                            </Link>\r\n                            <button\r\n                            // bg-red text-white border-r px-2 py-1 br-10 m-1\r\n                              className=\"border-b bg-black m-1\"\r\n                              onClick={() => {\r\n                                if (\r\n                                  window.confirm(\r\n                                    \"Are you sure you wish to delete this user?\"\r\n                                  )\r\n                                )\r\n                                  deleteHandler(items);\r\n                              }}\r\n                            >\r\n                              <DeleteIcon className=\"text-white\" />\r\n                            </button>{\" \"}\r\n                          </div>\r\n                        </Accordion.Body>\r\n                      </Accordion.Item>\r\n                    );\r\n                  })}\r\n                </Accordion>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n"],"names":["token","window","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","question","setQuestion","_useState3","_useState4","answer","setAnswer","_useState5","_useState6","faqFor","setFaqFor","_useState7","_useState8","id","setId","_useState9","_useState10","value","setValue","_useState11","_useState12","faq","setFaq","useEffect","axios","headers","Accept","Authorization","then","res","console","log","data","status","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","faqObj","wrap","_context","prev","next","preventDefault","FormData","append","result","Swal","position","icon","title","message","showConfirmButton","timer","location","reload","catch","error","response","stop","_x","apply","arguments","editHandler","_ref2","_callee2","items","_context2","scrollTo","top","behavior","description","faq_for","_x2","handleUpdateSubmit","_ref3","_callee3","_context3","_x3","_jsx","_Fragment","children","className","_jsxs","Accordion","defaultActiveKey","eventKey","AddIcon","CCol","xs","CCard","CCardHeader","CCardBody","CForm","onSubmit","md","CFormLabel","htmlFor","CFormInput","type","onChange","target","placeholder","CFormTextarea","name","required","CFormSelect","CButton","defaultValue","selected","map","index","style","fontWeight","Link","width","onClick","EditIcon","confirm","accept","newArr","filter","item","deleteHandler","DeleteIcon"],"sourceRoot":""}