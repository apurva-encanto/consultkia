{"version":3,"file":"static/js/24.01553a6a.chunk.js","mappings":"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","sources":["views/pages/login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logos from \"./temp-login-img.png\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport { MdVisibilityOff } from \"react-icons/md\";\nimport { MdVisibility } from \"react-icons/md\";\nconst Login = () => {\n  // const token =\n  //   typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [type, setType] = useState(\"password\");\n  const [icon, setIcon] = useState(<MdVisibilityOff />);\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: (toast) => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    },\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const adminlogin = new FormData();\n    adminlogin.append(\"phone\", email);\n    adminlogin.append(\"password\", password);\n    adminlogin.append(\"user_type\", 3);\n\n    await axios\n      .post(\"login\", adminlogin, {\n        // email: email,\n\n        headers: {\n          accept: \"application/json\",\n        },\n\n        // user_type: 3,\n      })\n      .then((result) => {\n        console.log(result);\n\n        result.data.status == 400\n          ? Toast.fire({\n              icon: \"error\",\n              title: result.data.message,\n            })\n          : Toast.fire({\n              icon: \"success\",\n              title: result.data.message,\n            });\n\n        result.data.status == 400 ? navigate(\"/\") : navigate(\"/dashboard\");\n\n        // localStorage.setItem(\"status\", result.data.token);\n        localStorage.setItem(\"status\", result?.data?.data?.token);\n      })\n      .catch((error) => {\n        console.log(error);\n        Toast.fire({\n          icon: \"error\",\n          title: error.response.data.message,\n        });\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"status\")) {\n      navigate(\"/dashboard\");\n    }\n  }, [navigate]);\n\n  const handleToggle = (e) => {\n    e.preventDefault();\n    if (type == \"password\") {\n      setIcon(<MdVisibility />);\n      setType(\"text\");\n    } else {\n      setIcon(<MdVisibilityOff />);\n      setType(\"password\");\n    }\n  };\n\n  return (\n    <div className=\"bg-white min-vh-100 d-flex flex-row align-items-center p-3\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9}>\n            <CCardGroup>\n              <CCard className=\"py-2 px-3\">\n                <CCardBody>\n                  <CForm onSubmit={handleSubmit}>\n                    <h2 style={{ color: \"#4a4843\" }}>\n                      ConsultKiya Admin Login\n                    </h2>\n                    <p className=\"text-medium-emphasis\">\n                      Sign In to your account\n                    </p>\n                    <CInputGroup className=\"my-4\">\n                      <CInputGroupText>\n                        <CIcon className=\"text-black\" icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        style={{ height: 45 }}\n                        placeholder=\"Username\"\n                        onChange={handleEmail}\n                        required\n                        value={email}\n                        autoComplete=\"username\"\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"my-4\">\n                      <CInputGroupText>\n                        <CIcon className=\"text-black\" icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type={type}\n                        placeholder=\"Password\"\n                        required\n                        autoComplete=\"current-password\"\n                        onChange={handlePassword}\n                        value={password}\n                      />\n                      <CInputGroupText>\n                        <button\n                          className=\"text-black\"\n                          onClick={handleToggle}\n                          style={{\n                            background: \"#fff\",\n                            border: \"none\",\n                            fontSize: \"20px\",\n                          }}\n                        >\n                          <span>{icon}</span>\n                        </button>\n                      </CInputGroupText>\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6} className=\"mb-4\">\n                        <CButton\n                          type=\"submit\"\n                          className=\"bg-black text-white border-b px-5\"\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"mb-4\">\n                        <Link\n                          to=\"/forget-password\"\n                          class=\"text-decoration-none text-medium-emphasis\"\n                        >\n                          {\" \"}\n                          <span>Forget Password</span>\n                        </Link>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-dark \">\n                <CCardBody className=\"text-center\">\n                  <div\n                    className=\" d-flex mt-3\"\n                    style={{ justifyContent: \"center\", alignItems: \"center\" }}\n                  >\n                    <img\n                      src={logos}\n                      alt=\"\"\n                      width=\"260\"\n                      className=\"sidebar-brand-full\"\n                    />\n                    {/* <h1 className=\"mt-4\">TEMP</h1>\n                    <p className=\"mt-5\">\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p> */}\n                    {/* <Link to=\"/register\">\n                      <CButton className=\"mt-3 bg-black border-b\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link> */}\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","type","setType","_useState7","_jsx","MdVisibilityOff","_useState8","icon","setIcon","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","adminlogin","wrap","_context","prev","next","preventDefault","FormData","append","axios","headers","accept","then","result","_result$data","_result$data$data","console","log","data","status","fire","title","message","localStorage","setItem","token","catch","error","response","stop","_x","apply","arguments","useEffect","getItem","className","children","CContainer","CRow","CCol","md","_jsxs","CCardGroup","CCard","CCardBody","CForm","onSubmit","style","color","CInputGroup","CInputGroupText","CIcon","cilUser","CFormInput","height","placeholder","onChange","target","value","required","autoComplete","cilLockLocked","onClick","MdVisibility","background","border","fontSize","xs","CButton","Link","to","class","justifyContent","alignItems","src","logos","alt","width"],"sourceRoot":""}