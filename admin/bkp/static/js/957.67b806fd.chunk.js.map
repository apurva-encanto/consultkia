{"version":3,"file":"static/js/957.67b806fd.chunk.js","mappings":"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","sources":["views/pages/settings/ChangePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CBreadcrumb, CBreadcrumbItem } from \"@coreui/react\";\r\n\r\n// or\r\n\r\nconst ChangePassword = () => {\r\n  const token =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n\r\n//   const [passwordError, setPasswordErr] = useState(\"\");\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   await axios\r\n  //     .post(\"changePassword\", {\r\n  //       old_password: oldPassword,\r\n  //       new_password: newPassword,\r\n  //       headers: {\r\n  //         Accept: \"application/json\",\r\n  //         Authorization: \"Bearer \" + token,\r\n  //       },\r\n  //     })\r\n  //     .then((result) => {\r\n  //       Toast.fire({\r\n  //         icon: \"success\",\r\n  //         title: result.data.message,\r\n  //       });\r\n  //       window.location.reload(false);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //       Toast.fire({\r\n  //         icon: \"error\",\r\n  //         title: error.response.data.message,\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n\r\n\r\n  console.log(oldPassword);\r\n  console.log(newPassword);\r\n\r\n//   const handleValidation = (evnt) => {\r\n//     const passwordInputValue = evnt.target.value.trim();\r\n//     const passwordInputFieldName = evnt.target.name;\r\n//     //for password\r\n//     if (passwordInputFieldName === \"new_password\") {\r\n//       const uppercaseRegExp = /(?=.*?[A-Z])/;\r\n//       const lowercaseRegExp = /(?=.*?[a-z])/;\r\n//       const digitsRegExp = /(?=.*?[0-9])/;\r\n//       const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\r\n//       const minLengthRegExp = /.{8,}/;\r\n//       const passwordLength = passwordInputValue.length;\r\n//       const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\r\n//       const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\r\n//       const digitsPassword = digitsRegExp.test(passwordInputValue);\r\n//       const specialCharPassword = specialCharRegExp.test(passwordInputValue);\r\n//       const minLengthPassword = minLengthRegExp.test(passwordInputValue);\r\n//       let errMsg = \"\";\r\n//       if (!uppercasePassword) {\r\n//         errMsg = \"At least one Uppercase\";\r\n//       } else if (!lowercasePassword) {\r\n//         errMsg = \"At least one Lowercase\";\r\n//       } else if (!digitsPassword) {\r\n//         errMsg = \"At least one digit\";\r\n//       } else if (!specialCharPassword) {\r\n//         errMsg = \"At least one Special Characters\";\r\n//       } else if (!minLengthPassword) {\r\n//         errMsg = \"At least minumum 8 characters\";\r\n//       } else {\r\n//         errMsg = \"\";\r\n//       }\r\n//       setPasswordErr(errMsg);\r\n//     }\r\n//   };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // const aboutsobj = new FormData();\r\n    // aboutsobj.append(\" old_password\", oldPassword);\r\n    // aboutsobj.append(\"new_password\", newPassword);\r\n\r\n    const jsonData = {\r\n      \r\n      old_password: oldPassword,\r\n      new_password: newPassword\r\n      \r\n      // Add other properties as needed\r\n    }\r\n\r\n\r\n    await axios\r\n      .post(\"changePassword\", jsonData, {\r\n        headers: {\r\n          Accept: \"application/json\", \r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result)\r\n        Toast.fire({\r\n          icon: result.data.message ==  \"The current password doesn't match.\" ?\"error\" :\"success\",\r\n          title: result.data.message,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"px-2\">\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <strong>Change Password</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm className=\"row g-3\" onSubmit={handleSubmit}>\r\n                <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">Current Password</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"inputAddress\"\r\n                    name=\"old_password\"\r\n                    // value={city}\r\n                    onChange={(e) => setOldPassword(e.target.value)}\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Enter Your Current Password\"\r\n                  />\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">New Password</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"inputAddress\"\r\n                    name=\"new_password\"\r\n                    // value={city}\r\n                    // onKeyUp={handleValidation}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Enter Your New Password\"\r\n                  />\r\n                  {/* <p className=\"text-red\">{passwordError}</p> */}\r\n                </CCol>\r\n                <CCol xs={12} className=\"text-center\">\r\n                  <CButton type=\"submit\" className=\"bg-black text-white border-b\">\r\n                    Update\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"names":["token","window","localStorage","getItem","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","_useState","useState","_useState2","_slicedToArray","oldPassword","setOldPassword","_useState3","_useState4","newPassword","setNewPassword","console","log","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","jsonData","wrap","_context","prev","next","preventDefault","old_password","new_password","axios","headers","Accept","Authorization","then","result","fire","icon","data","message","title","catch","error","response","stop","_x","apply","arguments","_jsx","_Fragment","children","className","CCol","xs","_jsxs","CCard","CCardHeader","CCardBody","CForm","onSubmit","CFormLabel","htmlFor","CFormInput","id","name","onChange","target","value","type","required","placeholder","CButton"],"sourceRoot":""}