{"version":3,"file":"static/js/25.b5b42f53.chunk.js","mappings":"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","sources":["views/pages/settings/PrivacyPolicy.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n  CFormLabel,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst PrivacyPolicy = () => {\r\n  const token =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n\r\n  const editor = useRef(null);\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  // const [title, settitle] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const config = {\r\n    readonly: false,\r\n    hotkeys: {\r\n      redo: \"ctrl+z\",\r\n      undo: \"ctrl+y,ctrl+shift+z\",\r\n      indent: \"ctrl+]\",\r\n      outdent: \"ctrl+[\",\r\n      bold: \"ctrl+b\",\r\n      italic: \"ctrl+i\",\r\n      removeFormat: \"ctrl+shift+m\",\r\n      insertOrderedList: \"ctrl+shift+7\",\r\n      insertUnorderedList: \"ctrl+shift+8\",\r\n      openSearchDialog: \"ctrl+f\",\r\n      openReplaceDialog: \"ctrl+r\",\r\n    },\r\n\r\n    askBeforePasteFromWord: false,\r\n    askBeforePasteHTML: false, // all options from https://xdsoft.net/jodit/docs/,\r\n    placeholder: \"Start typings...\",\r\n    enter: \"br\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"guidelines/1/2\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if(res.data.status == 200) {\r\n          setdescription(res.data.data.description);\r\n          setId(res.data.data.id);\r\n        }\r\n        console.log(res, \"dcghjdguhjdfsgfhvcsdhgvhdsgvbuv yvuifdy\");\r\n       \r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(description);\r\n\r\n    const aboutsobj = new FormData();\r\n\r\n    aboutsobj.append(\"description\", description);\r\n    aboutsobj.append(\"id\", id);\r\n    aboutsobj.append(\"type\", 2);\r\n\r\n    await axios\r\n      .post(\"/addQuidelines\", aboutsobj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result);\r\n        Toast.fire({\r\n          icon: result.data.status == 200 ? \"success\" : \"error\",\r\n          title: result.data.message,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"px-2\">\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <strong>Privacy Policy</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm className=\"row g-3\" onSubmit={handleSubmit}>\r\n                {/* <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">Title</CFormLabel>\r\n                  <CFormInput\r\n                    value={title}\r\n                    name=\"title\"\r\n                    onChange={(e) => settitle(e.target.value)}\r\n                    id=\"inputAddress\"\r\n                    required\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </CCol> */}\r\n                <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"exampleFormControlTextarea1\">\r\n                    Description\r\n                  </CFormLabel>\r\n                  <JoditEditor\r\n                    // style={style}\r\n                    ref={editor}\r\n                    config={config}\r\n                    value={description}\r\n                    // onChange={(e) => setdescription(e.target.value)}\r\n\r\n                    onBlur={(newContent) => setdescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                    onChange={(newContent) => newContent}\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    required\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    rows=\"12\"\r\n                    // style={{ height: \"400px\", minHeight: \"200px\" }}\r\n                  />\r\n                </CCol>\r\n\r\n                <CCol xs={12} className=\"text-center\">\r\n                  <CButton\r\n                    type=\"submit\"\r\n                    className=\" bg-black text-white border-b\"\r\n                  >\r\n                    Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n"],"names":["token","window","localStorage","getItem","editor","useRef","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","_useState","useState","_useState2","_slicedToArray","description","setdescription","_useState3","_useState4","id","setId","useEffect","axios","headers","Accept","Authorization","then","res","data","status","console","log","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","aboutsobj","wrap","_context","prev","next","preventDefault","FormData","append","result","fire","icon","title","message","catch","error","response","stop","_x","apply","arguments","_jsx","_Fragment","children","className","CCol","xs","_jsxs","CCard","CCardHeader","CCardBody","CForm","onSubmit","CFormLabel","htmlFor","JoditEditor","ref","config","readonly","hotkeys","redo","undo","indent","outdent","bold","italic","removeFormat","insertOrderedList","insertUnorderedList","openSearchDialog","openReplaceDialog","askBeforePasteFromWord","askBeforePasteHTML","placeholder","enter","value","onBlur","newContent","onChange","required","name","rows","CButton","type"],"sourceRoot":""}