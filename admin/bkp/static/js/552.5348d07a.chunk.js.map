{"version":3,"file":"static/js/552.5348d07a.chunk.js","mappings":"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","sources":["views/pages/settings/CustomerSupport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCardTitle,\r\n  CCardText,\r\n  CButton,\r\n  CForm,\r\n  CFormTextarea,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalTitle,\r\n  CCardSubtitle,\r\n  CModalBody,\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst discriptionstyle = {\r\n  WebkitLineClamp: 1,\r\n  WebkitBoxOrient: \"vertical\",\r\n  overflow: \"hidden\",\r\n  display: \"-webkit-box\",\r\n};\r\n\r\nconst CustomerSupport = () => {\r\n  // const { id } = useParams();\r\n\r\n  const token =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n  // const Id =\r\n  //   typeof window !== \"undefined\" ? localStorage.getItem(\"admin_id\") : null;\r\n\r\n  // const [AId, setAId] = useState(\"\");\r\n\r\n  // const [ans, setAns] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n\r\n  const [item, setItem] = useState([]);\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible1, setVisible1] = useState(false);\r\n  const [questionData, setQuestionData] = useState(\"\");\r\n  const [questionId, setQuestionId] = useState(\"\");\r\n  const [QId, setQId] = useState(\"\");\r\n  const [getAnswer, setGetAnswer] = useState(\"\");\r\n\r\n  const [ticketid, setTicketid] = useState(\"\");\r\n\r\n  const handleGiveAnswer = (e) => {\r\n    // e.preventDefault();\r\n    console.log(\"handleGiveAnswer called\");\r\n    console.log(e.ticket_id);\r\n    console.log(e, \"view\");\r\n    setVisible1(true);\r\n    setQuestionData(e.discription);\r\n    setQuestionId(e.ticket_id);\r\n    setQId(e.id);\r\n  };\r\n\r\n  const handleAnswerView = (e) => {\r\n    setTicketid(e.ticket_id);\r\n    setVisible(true);\r\n    const viewDataobj = new FormData();\r\n    viewDataobj.append(\"ticket_id\", e.id);\r\n    axios\r\n      .post(\"getMsgforadmin\", viewDataobj, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res, \"Ans view\");\r\n        // res.data.status == 200 ?   setGetAnswer(res.data.data):  setGetAnswer(\"\");\r\n        setGetAnswer(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // setAnswer(e.answer)\r\n  };\r\n\r\n  // Get Answer\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"userTicketlist\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        // console.log(res.data.data.item);\r\n        console.log(res, \"ticket List all\");\r\n        setItem(res.data.data);\r\n        // res.data.status == 200 ?   setItem(res.data.data):  setItem([])\r\n      });\r\n  }, [token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"QId:\", QId);\r\n    const categoryObj = new FormData();\r\n    categoryObj.append(\"description\", answer);\r\n    categoryObj.append(\"ticket_id\", QId);\r\n\r\n    console.log(answer);\r\n    console.log(QId);\r\n    console.log(categoryObj);\r\n\r\n    await axios\r\n      .post(\"addChat\", categoryObj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        console.log(result.data);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: result.data.message,\r\n          showConfirmButton: false,\r\n          timer: 2500,\r\n        });\r\n        window.location.reload(false);\r\n        // console.log(result);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      });\r\n  };\r\n\r\n  const value = \"\";\r\n\r\n  return (\r\n    <>\r\n      <CRow className=\"mb-2 px-2\">\r\n        {item.map((value, index) => {\r\n          return (\r\n            <CCol key={index} sm={6} md={6} lg={4}>\r\n              <CCard className=\"shadow mb-3 bg-body rounded\">\r\n                <CCardBody>\r\n                  <div className=\" d-flex justify-content-between\">\r\n                    <CCardTitle\r\n                      className=\"fw-bolder\"\r\n                      style={{ fontSize: \"16px\" }}\r\n                    >\r\n                      {value.ticket_id}\r\n                    </CCardTitle>\r\n\r\n                    <span\r\n                      style={{\r\n                        fontSizeAdjust: 10,\r\n                        height: 25,\r\n                        fontSize: \"12px\",\r\n                        background:\r\n                          value.status == \"1\" ? \"#21cf3b\" : \"#ff000070\",\r\n                      }}\r\n                      className=\" rounded-5 text-white px-3 py-1 fw-semibold d-flex align-items-center  text-center \"\r\n                    >\r\n                      {value.status == \"1\" ? \"Completed\" : \"Pending\"}\r\n                    </span>\r\n                  </div>\r\n                  <CCardSubtitle\r\n                    style={{ fontSize: \"14px\" }}\r\n                    className=\"mb-3 mt-1 text-medium-emphasis\"\r\n                  >\r\n                    {new Date(value.created_at).toLocaleString()}\r\n                  </CCardSubtitle>\r\n\r\n                  {/* <CCardText style={{height:50}} className=\"overflow-auto\">{value.discription}</CCardText> */}\r\n                  <CCardText style={discriptionstyle}>\r\n                    {value.discription}\r\n                  </CCardText>\r\n\r\n                  {value.status == \"1\" ? (\r\n                    <CButton\r\n                      className=\"text-white px-4 py-1 rounded-5 fw-semibold border border-white\"\r\n                      style={{ backgroundColor: \"#1D718B\", fontSize: \"12px\" }}\r\n                      onClick={() => handleAnswerView(value)}\r\n                    >\r\n                      View\r\n                    </CButton>\r\n                  ) : (\r\n                    <CButton\r\n                      className=\"text-white px-4 py-1 rounded-5 fw-semibold border border-white\"\r\n                      style={{ backgroundColor: \"#1D718B\", fontSize: \"12px\" }}\r\n                      onClick={() => handleGiveAnswer(value)}\r\n                    >\r\n                      Answer\r\n                    </CButton>\r\n                  )}\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          );\r\n        })}\r\n      </CRow>\r\n\r\n      <CModal\r\n        backdrop=\"static\"\r\n        visible={visible}\r\n        onClose={() => setVisible(false)}\r\n        aria-labelledby=\"StaticBackdropExampleLabel\"\r\n      >\r\n        <CModalHeader>\r\n          <CModalTitle id=\"StaticBackdropExampleLabel\">\r\n            {/* Modal title  */} {ticketid}\r\n          </CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <div className=\"my-1\">\r\n            <strong className=\" \">Question</strong>\r\n          </div>\r\n          {getAnswer.question}\r\n          <div className=\"mt-4 mb-1\">\r\n            <strong className=\" \">Answer</strong>\r\n          </div>\r\n          {getAnswer.answer}\r\n        </CModalBody>\r\n      </CModal>\r\n\r\n      <CModal\r\n        backdrop=\"static\"\r\n        visible={visible1}\r\n        onClose={() => setVisible1(false)}\r\n        aria-labelledby=\"StaticBackdropExampleLabel\"\r\n      >\r\n        <CModalHeader>\r\n          <CModalTitle id=\"StaticBackdropExampleLabel\">\r\n             {questionId}\r\n          </CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <div className=\"my-1\">\r\n            <strong className=\" \">Question</strong>\r\n          </div>\r\n          {questionData}\r\n        </CModalBody>\r\n\r\n        <CForm className=\"px-3\">\r\n          <div className=\"mb-2\">\r\n            <strong className=\" \">Answer</strong>\r\n          </div>\r\n          <CFormTextarea\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows={9}\r\n            onChange={(e) => setAnswer(e.target.value)}\r\n          ></CFormTextarea>\r\n        </CForm>\r\n\r\n        <CModalFooter>\r\n          <CButton\r\n            onClick={handleSubmit}\r\n            className=\"bg-black text-white border-b\"\r\n          >\r\n            Sumbit\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerSupport;\r\n"],"names":["discriptionstyle","WebkitLineClamp","WebkitBoxOrient","overflow","display","token","window","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","answer","setAnswer","_useState3","_useState4","item","setItem","_useState5","_useState6","visible","setVisible","_useState7","_useState8","visible1","setVisible1","_useState9","_useState10","questionData","setQuestionData","_useState11","_useState12","questionId","setQuestionId","_useState13","_useState14","QId","setQId","_useState15","_useState16","getAnswer","setGetAnswer","_useState17","_useState18","ticketid","setTicketid","useEffect","axios","headers","Accept","Authorization","then","res","console","log","data","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","categoryObj","wrap","_context","prev","next","preventDefault","FormData","append","result","Swal","position","icon","title","message","showConfirmButton","timer","location","reload","catch","error","response","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","CRow","className","map","value","index","CCol","sm","md","lg","CCard","CCardBody","CCardTitle","style","fontSize","ticket_id","fontSizeAdjust","height","background","status","CCardSubtitle","Date","created_at","toLocaleString","CCardText","discription","CButton","backgroundColor","onClick","viewDataobj","id","handleAnswerView","CModal","backdrop","onClose","CModalHeader","CModalTitle","CModalBody","question","CForm","CFormTextarea","rows","onChange","target","CModalFooter"],"sourceRoot":""}