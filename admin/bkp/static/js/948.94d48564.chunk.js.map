{"version":3,"file":"static/js/948.94d48564.chunk.js","mappings":"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","sources":["views/pages/practiceArea/PracticeArea.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  CRow,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdOutlineModeEdit } from \"react-icons/md\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport Swal from \"sweetalert2\";\r\nimport { HiArrowSmLeft } from \"react-icons/hi\";\r\n// or\r\n\r\nconst PracticeArea = () => {\r\n  const [practiceArea, setPracticeArea] = useState([]);\r\n  const token =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  // --------------------------------------------------FETCH ALL RECRUITER-------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"practiceList\", { headers: { Authorization: \"Bearer \" + token } })\r\n      .then((res) => {\r\n        console.log(res);\r\n        res.data.status == 200\r\n          ? setPracticeArea(res.data.data)\r\n          : setPracticeArea([]);\r\n        // setPracticeArea(res.data.data);\r\n      });\r\n  }, [token]);\r\n\r\n  // ---------------------------------------------------------------------------------------------------------------------\r\n\r\n  // --------------------------------------------------DELETE RECRUITER---------------------------------------------------\r\n\r\n  const deleteHandler = (row) => {\r\n    axios\r\n      .get(\"practiceDelete/\" + row.id, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: result.data.message,\r\n        });\r\n\r\n        console.log(result);\r\n        let newArr = practiceArea.filter((items) => {\r\n          return row.id !== items.id;\r\n        });\r\n        setPracticeArea(newArr);\r\n        console.log(newArr);\r\n        // window.location.reload(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // ---------------------------------------------------------------------------------------------------------------------\r\n\r\n  // ------------------------------------------------RECRUITER TABLE COLUMN-----------------------------------------------\r\n  // const data = [\r\n  //   {\r\n\r\n  //       phoneno: \"1234567890\",\r\n  //       username: \"abc1234\",\r\n  //       name: \"1234abc\",\r\n  //       city: \"bhopal\",\r\n  //       gender: \"male\",\r\n\r\n  //     },\r\n  // ]\r\n\r\n  const columns = [\r\n    {\r\n      name: \"#\",\r\n      selector: (row, index) => index + 1,\r\n      width: \"120px\",\r\n    },\r\n\r\n    {\r\n      name: \"Practice Image\",\r\n      selector: (row) =>\r\n        row.image == null ? (\r\n          <img\r\n            width={40}\r\n            // style={{ borderRadius: \"50%\" }}\r\n            className=\"m-1\"\r\n            src=\"https://cdn.vectorstock.com/i/preview-1x/32/12/default-avatar-profile-icon-vector-39013212.jpg\"\r\n            alt=\"MDN logo\"\r\n          />\r\n        ) : (\r\n          <Link to={row.profile_pic} target=\"_blank\">\r\n            {\" \"}\r\n            <img\r\n              width={40}\r\n              style={{ borderRadius: \"0%\", backgroundColor: \"#1D718B70\" }}\r\n              className=\"m-1\"\r\n              src={row.image}\r\n              alt=\"MDN logo\"\r\n            />\r\n          </Link>\r\n        ),\r\n      width: \"180px\",\r\n    },\r\n\r\n    {\r\n      name: \"Practice Name\",\r\n      selector: (row) => <span className=\"text-capital fs-15\">{row.name}</span>,\r\n      sortable: true,\r\n      maxWidth: \"440px\",\r\n    },\r\n\r\n    {\r\n      name: \"Action\",\r\n      selector: (row) => (\r\n        <div>\r\n          <Link to={`/edit-Practice-area/${row.id}`}>\r\n            <CButton className=\"border-b bg-black  m-1\">\r\n              <MdOutlineModeEdit size={20} />\r\n            </CButton>\r\n          </Link>\r\n          <CButton\r\n            className=\"border-b bg-black m-1\"\r\n            onClick={() => {\r\n              if (window.confirm(\"Are you sure you wish to delete this item?\"))\r\n                deleteHandler(row);\r\n            }}\r\n          >\r\n            <AiOutlineDelete size={20} />\r\n          </CButton>\r\n        </div>\r\n      ),\r\n      width: \"140px\",\r\n      sortable: false,\r\n    },\r\n  ];\r\n\r\n  const filteredItems = practiceArea.filter(\r\n    (item) =>\r\n      item.name && item.name.toLowerCase().includes(filterText.toLowerCase())\r\n  );\r\n  console.log(\"practiceArea filter\", practiceArea);\r\n\r\n  const handleClear = () => {\r\n    if (filterText) {\r\n      setResetPaginationToggle(!resetPaginationToggle);\r\n      setFilterText(\"\");\r\n    }\r\n  };\r\n  const TextField = styled.input`\r\n    height: 32px;\r\n    width: 180px;\r\n    border-radius: 3px;\r\n    border-top-left-radius: 5px;\r\n    border-bottom-left-radius: 5px;\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    border: 1px solid #e5e5e5;\r\n    padding: 0 32px 0 16px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `;\r\n  return (\r\n    <>\r\n      <div className=\"px-2\">\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              {filterText && (\r\n                <HiArrowSmLeft\r\n                  style={{ width: 30, height: 30 }}\r\n                  onClick={handleClear}\r\n                />\r\n              )}\r\n              <strong>Practice Area</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol lg={12}>\r\n                  <CCard color=\"light\" textColor=\"black\" className=\"mb-3\">\r\n                    <CCardHeader>\r\n                      <div className=\"row \">\r\n                        <CCol sm={3}>\r\n                          <div className=\"text-center\">\r\n                            <TextField\r\n                              type=\"text\"\r\n                              placeholder=\"Search....\"\r\n                              className=\"mt-1 mb-2\"\r\n                              value={filterText}\r\n                              autoFocus\r\n                              onChange={(e) => setFilterText(e.target.value)}\r\n                            />\r\n                          </div>\r\n                        </CCol>\r\n                        <CCol sm={6}></CCol>\r\n                        <CCol sm={3}>\r\n                          <div className=\"text-center\">\r\n                            <Link to=\"/add-practice-area\">\r\n                              <CButton className=\"bg-black text-white border-b px-3 py-1 br-10 m-1\">\r\n                                + Add Practice Area\r\n                              </CButton>\r\n                            </Link>\r\n                          </div>\r\n                        </CCol>\r\n                      </div>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <DataTable\r\n                        columns={columns}\r\n                        data={filteredItems}\r\n                        defaultSortFieldId\r\n                        fixedHeader\r\n                        responsive\r\n                        pagination={10}\r\n                        subHeaderAlign=\"right\"\r\n                        highlightOnHover\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PracticeArea;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","practiceArea","setPracticeArea","token","window","localStorage","getItem","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","_useState3","_useState4","filterText","setFilterText","_useState5","_useState6","resetPaginationToggle","setResetPaginationToggle","useEffect","axios","headers","Authorization","then","res","console","log","data","status","columns","name","selector","row","index","width","image","_jsx","className","src","alt","_jsxs","Link","to","profile_pic","target","children","style","borderRadius","backgroundColor","sortable","maxWidth","concat","id","CButton","MdOutlineModeEdit","size","onClick","confirm","Accept","result","fire","icon","title","message","newArr","filter","items","catch","error","deleteHandler","AiOutlineDelete","filteredItems","item","toLowerCase","includes","TextField","styled","_templateObject","_taggedTemplateLiteral","_Fragment","CCol","xs","CCard","CCardHeader","HiArrowSmLeft","height","CCardBody","CRow","lg","color","textColor","sm","type","placeholder","value","autoFocus","onChange","e","DataTable","defaultSortFieldId","fixedHeader","responsive","pagination","subHeaderAlign","highlightOnHover"],"sourceRoot":""}