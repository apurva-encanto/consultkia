{"version":3,"file":"static/js/543.1445dcfc.chunk.js","mappings":"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","sources":["views/pages/practiceArea/EditPracticeArea.js"],"sourcesContent":["\r\nimport React, { useState, useEffect, } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CForm,\r\n  CImage,\r\n} from \"@coreui/react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n// or\r\n\r\nconst EditPracticeArea = () => {\r\n    const { id } = useParams();\r\n  const token = typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [singlePracticeArea, setSinglePracticeArea] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [getImage, setGetImage] = useState(\"\");\r\n\r\n  const imageChange = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"practiceDetail/\" +id, { headers: { Authorization: \"Bearer \" + token } })\r\n      .then((res) => {\r\n        \r\n        console.log(\"res..\",res)\r\n        setSinglePracticeArea(res.data.data.name);\r\n        setGetImage(res.data.data.image);\r\n      });\r\n  }, [id, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const helpdetailsobj = new FormData();\r\n    helpdetailsobj.append(\"name\", singlePracticeArea);\r\n    helpdetailsobj.append(\"id\", id);\r\n    helpdetailsobj.append(\"image\", image);\r\n\r\n    await axios\r\n      .post(\"addEditPractice\", helpdetailsobj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          'Authorization': 'Bearer '+ token\r\n        },\r\n      })\r\n      .then((result) => {\r\n        \r\n        console.log(result);\r\n\r\n      //  result.data.status == 400\r\n      //     ? Toast.fire({\r\n      //         icon: \"error\",\r\n      //         title: result.data.message,\r\n      //       })\r\n      //     : \r\n          Toast.fire({\r\n              icon: \"success\",\r\n              title: result.data.message,\r\n            });\r\n\r\n        result.data.status == 400 ? navigate(\"/edit-Practice-area/:id\") : navigate(\"/practice-area\");\r\n      })\r\n      .catch((error) => {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"px-2\">\r\n      <CCol xs={12} >\r\n          <CCard className=\"p-2  mb-3\">\r\n          <CBreadcrumb className=\"m-0 ms-2\">\r\n      <CBreadcrumbItem href=\"/dashboard\" style={{textDecoration:\"none !important\"}}>Dashboard</CBreadcrumbItem>\r\n     \r\n          <CBreadcrumbItem  href=\"/practice-area\">\r\n          Practice Area\r\n          </CBreadcrumbItem>\r\n          <CBreadcrumbItem active>Edit Practice Area</CBreadcrumbItem>\r\n  \r\n    </CBreadcrumb>\r\n          </CCard>\r\n        </CCol>\r\n     \r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <strong>Edit Practice Area</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm className=\"row g-3\" onSubmit={handleSubmit}>\r\n                <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">Practice Area</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"inputAddress\"\r\n                    name=\"name\"\r\n                    value={singlePracticeArea}\r\n                    onChange={(e) => setSinglePracticeArea(e.target.value)}\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Practice Area name\"\r\n                  />\r\n                </CCol>\r\n\r\n                <CCol md={6}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">Company Logo</CFormLabel>\r\n                  <CFormInput\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={imageChange}\r\n                    id=\"formFile\"\r\n                  />\r\n                </CCol>\r\n\r\n                <CCol md={3} className=\"pt-3 \">\r\n                  {image !== \"\" ?  (\r\n                    <CImage\r\n                      align=\"center\"\r\n                      width={75}\r\n                      rounded\r\n                      thumbnail\r\n                      orientation=\"top\"\r\n                      src={URL.createObjectURL(image)}\r\n                    />\r\n                  )    : <CImage\r\n                      align=\"center\"\r\n                      width={75}\r\n                      rounded\r\n                      style={{ backgroundColor:\"#1D718B70\" }}\r\n                     \r\n                      thumbnail\r\n                      orientation=\"top\"\r\n                      src={getImage}\r\n                    />}\r\n                </CCol>\r\n\r\n\r\n                <CCol xs={12} className=\"text-center\">\r\n                  <CButton type=\"submit\" className=\"bg-black text-white border-b\">\r\n                 Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPracticeArea;\r\n"],"names":["id","useParams","token","window","localStorage","getItem","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","singlePracticeArea","setSinglePracticeArea","_useState3","_useState4","image","setImage","_useState5","_useState6","getImage","setGetImage","useEffect","axios","headers","Authorization","then","res","console","log","data","name","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","helpdetailsobj","wrap","_context","prev","next","preventDefault","FormData","append","Accept","result","fire","icon","title","message","status","catch","error","response","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","className","CCol","xs","CCard","CBreadcrumb","CBreadcrumbItem","href","style","textDecoration","active","CCardHeader","CCardBody","CForm","onSubmit","CFormLabel","htmlFor","CFormInput","value","onChange","target","type","required","placeholder","md","accept","files","length","CImage","align","width","rounded","thumbnail","orientation","src","URL","createObjectURL","backgroundColor","CButton"],"sourceRoot":""}