{"version":3,"file":"static/js/391.c050ee84.chunk.js","mappings":"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","sources":["views/pages/language/AddLanguage.js"],"sourcesContent":["\r\nimport React, { useState, } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CCardHeader,\r\n  CButton,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n// or\r\n\r\nconst AddLanguage = () => {\r\n  const token = typeof window !== \"undefined\" ? localStorage.getItem(\"status\") : null;\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [language, setLanguage] = useState(\"\");\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const helpdetailsobj = new FormData();\r\n    helpdetailsobj.append(\"language_name\", language);\r\n\r\n    await axios\r\n      .post(\"addEditLanguage\", helpdetailsobj, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          'Authorization': 'Bearer '+ token\r\n        },\r\n      })\r\n      .then((result) => {\r\n        \r\n        console.log(result);\r\n\r\n        // result.data.status == 400\r\n        //    ? Toast.fire({\r\n        //        icon: \"error\",\r\n        //        title: result.data.message,\r\n        //      })\r\n        //    : \r\n           Toast.fire({\r\n               icon: \"success\",\r\n               title: result.data.message,\r\n             });\r\n \r\n         result.data.status == 400 ? navigate(\"/add-language\") : navigate(\"/language\");\r\n      })\r\n      .catch((error) => {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"px-2\">\r\n      <CCol xs={12} >\r\n          <CCard className=\"p-2  mb-3\">\r\n          <CBreadcrumb className=\"m-0 ms-2\">\r\n      <CBreadcrumbItem href=\"/dashboard\" style={{textDecoration:\"none !important\"}}>Dashboard</CBreadcrumbItem>\r\n     \r\n          <CBreadcrumbItem  href=\"/language\">\r\n           Language\r\n          </CBreadcrumbItem>\r\n          <CBreadcrumbItem active>Add Language</CBreadcrumbItem>\r\n  \r\n    </CBreadcrumb>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <strong>Add Language</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm className=\"row g-3\" onSubmit={handleSubmit}>\r\n                <CCol xs={12}>\r\n                  <CFormLabel htmlFor=\"inputAddress\">Language</CFormLabel>\r\n                  <CFormInput\r\n                    id=\"inputAddress\"\r\n                    name=\"name\"\r\n                    // value={city}\r\n                    onChange={(e) => setLanguage(e.target.value)}\r\n                    type=\"text\"\r\n                    required\r\n                    placeholder=\"Language name\"\r\n                  />\r\n                </CCol>\r\n                <CCol xs={12} className=\"text-center\">\r\n                  <CButton type=\"submit\" className=\"bg-black text-white border-b \">\r\n                 Submit\r\n                  </CButton>\r\n                </CCol>\r\n              </CForm>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddLanguage;\r\n"],"names":["token","window","localStorage","getItem","Toast","Swal","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","language","setLanguage","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","helpdetailsobj","wrap","_context","prev","next","preventDefault","FormData","append","axios","headers","Accept","then","result","console","log","fire","icon","title","data","message","status","catch","error","response","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","className","CCol","xs","CCard","CBreadcrumb","CBreadcrumbItem","href","style","textDecoration","active","CCardHeader","CCardBody","CForm","onSubmit","CFormLabel","htmlFor","CFormInput","id","name","onChange","target","value","type","required","placeholder","CButton"],"sourceRoot":""}